$date
  Mon Sep 13 11:31:26 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module tb_top $end
$var reg 2 ! s_in_mux[1:0] $end
$var reg 8 " s_in_adder[7:0] $end
$var reg 8 # s_out_result[7:0] $end
$var reg 1 $ s_out_overflow $end
$scope module system $end
$var reg 2 % in_mux[1:0] $end
$var reg 8 & in_adder[7:0] $end
$var reg 8 ' out_result[7:0] $end
$var reg 1 ( out_overflow $end
$var reg 8 ) s_mux_output[7:0] $end
$scope module c1_adder $end
$var reg 8 * a[7:0] $end
$var reg 8 + b[7:0] $end
$var reg 1 , c $end
$var reg 8 - s[7:0] $end
$var reg 1 . overflow $end
$var reg 8 / e[7:0] $end
$scope module fa0 $end
$var reg 1 0 a $end
$var reg 1 1 b $end
$var reg 1 2 cin $end
$var reg 1 3 sum $end
$var reg 1 4 cout $end
$var reg 1 5 f1 $end
$var reg 1 6 f2 $end
$var reg 1 7 f3 $end
$upscope $end
$scope module fa1 $end
$var reg 1 8 a $end
$var reg 1 9 b $end
$var reg 1 : cin $end
$var reg 1 ; sum $end
$var reg 1 < cout $end
$var reg 1 = f1 $end
$var reg 1 > f2 $end
$var reg 1 ? f3 $end
$upscope $end
$scope module fa2 $end
$var reg 1 @ a $end
$var reg 1 A b $end
$var reg 1 B cin $end
$var reg 1 C sum $end
$var reg 1 D cout $end
$var reg 1 E f1 $end
$var reg 1 F f2 $end
$var reg 1 G f3 $end
$upscope $end
$scope module fa3 $end
$var reg 1 H a $end
$var reg 1 I b $end
$var reg 1 J cin $end
$var reg 1 K sum $end
$var reg 1 L cout $end
$var reg 1 M f1 $end
$var reg 1 N f2 $end
$var reg 1 O f3 $end
$upscope $end
$scope module fa4 $end
$var reg 1 P a $end
$var reg 1 Q b $end
$var reg 1 R cin $end
$var reg 1 S sum $end
$var reg 1 T cout $end
$var reg 1 U f1 $end
$var reg 1 V f2 $end
$var reg 1 W f3 $end
$upscope $end
$scope module fa5 $end
$var reg 1 X a $end
$var reg 1 Y b $end
$var reg 1 Z cin $end
$var reg 1 [ sum $end
$var reg 1 \ cout $end
$var reg 1 ] f1 $end
$var reg 1 ^ f2 $end
$var reg 1 _ f3 $end
$upscope $end
$scope module fa6 $end
$var reg 1 ` a $end
$var reg 1 a b $end
$var reg 1 b cin $end
$var reg 1 c sum $end
$var reg 1 d cout $end
$var reg 1 e f1 $end
$var reg 1 f f2 $end
$var reg 1 g f3 $end
$upscope $end
$scope module fa7 $end
$var reg 1 h a $end
$var reg 1 i b $end
$var reg 1 j cin $end
$var reg 1 k sum $end
$var reg 1 l cout $end
$var reg 1 m f1 $end
$var reg 1 n f2 $end
$var reg 1 o f3 $end
$upscope $end
$upscope $end
$scope module c2_mux $end
$var reg 2 p in_ctrl_sel[1:0] $end
$var reg 8 q in_signal_a[7:0] $end
$var reg 8 r in_signal_b[7:0] $end
$var reg 8 s in_signal_c[7:0] $end
$var reg 8 t in_signal_d[7:0] $end
$var reg 8 u out_mux[7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00 !
b00011010 "
b00000001 #
0$
b00 %
b00011010 &
b00000001 '
0(
b11100111 )
b00011010 *
b11100111 +
0,
b00000001 -
0.
b11111110 /
00
11
02
13
04
15
06
07
18
19
0:
0;
1<
0=
1>
0?
0@
1A
1B
0C
1D
1E
0F
1G
1H
0I
1J
0K
1L
1M
0N
1O
1P
0Q
1R
0S
1T
1U
0V
1W
0X
1Y
1Z
0[
1\
1]
0^
1_
0`
1a
1b
0c
1d
1e
0f
1g
0h
1i
1j
0k
1l
1m
0n
1o
b00 p
b11100111 q
b11101111 r
b11110111 s
b11111111 t
b11100111 u
#10000000
b01 !
b00010010 "
b00000001 #
0$
b01 %
b00010010 &
b00000001 '
0(
b11101111 )
b00010010 *
b11101111 +
b00000001 -
0.
b11111110 /
0H
1I
0K
1L
1M
1O
1R
0S
1T
1W
1Z
0[
1\
1_
1b
0c
1d
1g
1j
0k
1l
1o
b01 p
b11101111 u
#20000000
b10 !
b00001010 "
b00000001 #
0$
b10 %
b00001010 &
b00000001 '
0(
b11110111 )
b00001010 *
b11110111 +
b00000001 -
0.
b11111110 /
1H
0I
0K
1L
1M
0N
1O
0P
1Q
1R
0S
1T
1U
1W
1Z
0[
1\
1_
1b
0c
1d
1g
1j
0k
1l
1o
b10 p
b11110111 u
#30000000
b11 !
b00000010 "
b00000001 #
0$
b11 %
b00000010 &
b00000001 '
0(
b11111111 )
b00000010 *
b11111111 +
b00000001 -
0.
b11111110 /
0H
1I
0K
1L
1M
1O
1R
0S
1T
1W
1Z
0[
1\
1_
1b
0c
1d
1g
1j
0k
1l
1o
b11 p
b11111111 u
#40000000
b00000001 "
b00000000 #
0$
b00000001 &
b00000000 '
0(
b00000001 *
b00000000 -
0.
b11111111 /
10
03
14
05
16
08
1:
0;
1<
1=
0>
1?
1B
0C
1D
1G
1J
0K
1L
1O
1R
0S
1T
1W
1Z
0[
1\
1_
1b
0c
1d
1g
1j
0k
1l
1o
#50000000
b00000000 "
b11111111 #
0$
b00000000 &
b11111111 '
0(
b00000000 *
b11111111 -
0.
b00000000 /
00
13
04
15
06
0:
1;
0<
0?
0B
1C
0D
0G
0J
1K
0L
0O
0R
1S
0T
0W
0Z
1[
0\
0_
0b
1c
0d
0g
0j
1k
0l
0o
#60000000
